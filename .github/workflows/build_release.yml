name: Build release
on:
  pull_request:
    branches:
      - master
env:
  RELEASE_SOURCE_SITE: ${{ secrets.RELEASE_SOURCE_SITE }}
  TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
  CI_BRANCH: ${{ github.head_ref || github.ref_name }}
  COMMIT_SHA: ${{ github.sha }}
  CI_BUILD_NUMBER: ${{ github.run_number }}
  DEFAULT_SITE: ${{ secrets.TERMINUS_SITE }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  GITHUB_OWNER: ${{ github.repository_owner }}
  CI_PROJECT_NAME: ${{ github.repository }}
  PR_NUMBER: ${{ github.event.number }}
  CI_PULL_REQUEST: ${{ github.event.pull_request._links.html.href }}
  TERMINUS_HIDE_GIT_MODE_WARNING: 1
defaults:
  run:
    shell: bash

jobs:
  setup-terminus:
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php8.1
      options: --user root
    runs-on: ubuntu-latest
    name: Set up Terminus

    steps:
      - name: Install Terminus and plugins
        run: |
          curl -L https://github.com/pantheon-systems/terminus/releases/download/3.1.4/terminus.phar -o /usr/local/bin/terminus
          chmod +x /usr/local/bin/terminus
          terminus self:update
          terminus self:plugin:install terminus-build-tools-plugin

      - name: Authenticate to Terminus
        env:
          TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
        run: terminus -q -n auth:login --machine-token="$TERMINUS_TOKEN"

      - name: Cache Terminus
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terminus
            ~/.terminus
          key: cache-terminus-${{ github.run_id }}
          restore-keys: |
            cache-terminus-

      - name: setup-environment-vars
        run: /build-tools-ci/scripts/set-environment

  create-backup:
    runs-on: ubuntu-latest
    name: Set up environment

    steps:
      - name: Restore Terminus
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terminus
            ~/.terminus
          key: cache-terminus-${{ github.run_id }}

      - name: Create backup
        run: terminus backup:create $SOURCE_SITE.dev --keep-for=1

  setup-environment:
    runs-on: ubuntu-latest
    name: Set up environment
    needs: create-backup

    steps:
      - name: Restore Terminus
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terminus
            ~/.terminus
          key: cache-terminus-${{ github.run_id }}

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Get backup
        run: |
          files_path=$(terminus backup:get $RELEASE_SOURCE_SITE.dev --element=files)
          db_path=$(terminus backup:get $RELEASE_SOURCE_SITE.dev --element=database)
          echo "files_path=$files_path" >> $GITHUB_ENV
          echo "db_path=$db_path" >> $GITHUB_ENV

      - name: Restore DB and files
        run: |
          terminus import:db "$TERMINUS_SITE.pr-$PR_NUMBER" "${{ env.db_path }}"
          terminus import:files "$TERMINUS_SITE.pr-$PR_NUMBER" "${{ env.files_path }}"

      - name: Build frontend components
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
          YALESITES_BUILD_TOKEN: ${{ secrets.YALESITES_BUILD_TOKEN }}
        run: |
          ./.ci/build/build_frontend

      - name: Deploy to Pantheon
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: ./.ci/deploy/pantheon/dev-multidev

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  percy-check:
    runs-on: ubuntu-latest
    name: Set up environment
    needs: setup-environment

    steps:
      - name: Restore Terminus
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/bin/terminus
            ~/.terminus
          key: cache-terminus-${{ github.run_id }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          fetch-depth: 0

      - name: Run percy
        # uses: actions/setup-node@v3
        # with:
        #   node-version: '14'
        run: |
          SITE_URL=$(terminus site:view "$TERMINUS_SITE.pr-$PR_NUMBER" --print)
          npm install --save-dev @percy/cli
          npx percy snapshot "$SITE_URL"menu-links-only/sitemap.xml
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

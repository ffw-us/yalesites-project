#!/bin/bash

set -eo pipefail

# This script builds out frontend assets for the atomic theme and
# component library if the pull request branch exists in those repos.

# Define path to atomic theme for reuse.
ATOMIC_PATH="web/themes/contrib/atomic"

# Build atomic theme. We must do this from the profile by updating composer.json,
# removing the existing atomic directory, and running composer update.
cd "$GITHUB_WORKSPACE"/web/profiles/custom/yalesites_profile

# Require the branch version if it exists.
if [ -n "$(git ls-remote --heads https://github.com/yalesites-org/atomic.git "$BRANCH")" ]; then
  composer require --prefer-dist --no-update yalesites-org/atomic:dev-"$BRANCH"
fi

cd "$GITHUB_WORKSPACE"
rm -rf "${GITHUB_WORKSPACE:?}"/"$ATOMIC_PATH"
composer update --prefer-dist

# Check if branch exists in component library.
if [ -n "$(git ls-remote --heads https://github.com/yalesites-org/component-library-twig.git "$BRANCH")" ]; then
  # Build component library
  cd "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"
  npm ci --omit=dev --ignore-scripts

  # Remove component library from atomic so we can add the branch version later.
  rm -rf node_modules/@yalesites-org/component-library-twig

  # Clone and build the component library from branch.
  cd /tmp
  git clone --single-branch --branch "$BRANCH" https://github.com/yalesites-org/component-library-twig && cd component-library-twig
  rm -rf .git
  npm ci --omit=dev --ignore-scripts
  npm install webpack-cli
  npm run build
  rm -rf node_modules

  # Copy built component library into atomic theme.
  mv /tmp/component-library-twig "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"/node_modules/@yalesites-org

  # Clean up atomic's node_modules and remove gitignores so the changes can be staged.
  for dir in "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"/node_modules/*; do
    if [ "$dir" != "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"/node_modules/@yalesites-org ]; then
      rm -rf "$dir"
    fi
  done

  # Copy atomic theme to tmp for safe keeping.
  cp -pr "$GITHUB_WORKSPACE"/"$ATOMIC_PATH" /tmp

  # Remove atomic as a composer dependency, so Integrated Composer doesn't fail.
  cd "$GITHUB_WORKSPACE"/web/profiles/custom/yalesites_profile
  composer remove yalesites-org/atomic
  rm -rf "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"

  # Copy atomic back into the themes directory and remove its gitignore so node_modules can be committed.
  cp -pr /tmp/atomic "$GITHUB_WORKSPACE"/web/themes/contrib
  rm "$GITHUB_WORKSPACE"/"$ATOMIC_PATH"/.gitignore

  cd "$GITHUB_WORKSPACE"

  # Cut the gitignore file so themes can be committed.
  terminus build:gitignore:cut
  
  composer update
fi

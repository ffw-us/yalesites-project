<?php

/**
 * @file
 * Contains ys_core.module functions.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * @file
 * Contains ys_core.module functions.
 */

/**
 * Add template file for social links.
 *
 * Implements hook_theme().
 */
function ys_core_theme($existing, $type, $theme, $path): array {
  return [
    'ys_breadcrumb_block' => [
      'variables' => [
        'items' => [],
      ],
    ],
    'ys_support_form' => [
      'variables' => [
        'link' => NULL,
      ],
    ],
    'ys_dashboard' => [
      'variables' => [],
    ],
    'ys_dashboard_resources' => [
      'variables' => [],
    ],
    'ys_social_links' => [
      'variables' => [
        'icons' => [],
      ],
    ],
  ];
}

/**
 * Changes wording of sticky at top of lists.
 *
 * Implements hook_form_alter().
 */
function ys_core_form_alter(&$form, $form_state, $form_id) {
  if (isset($form['sticky'])) {
    $form['sticky']['widget']['value']['#title'] = t('Pin to the beginning of list');
  }
}

/**
 * Passes the config to enable/disable search form into templates.
 *
 * Implements hook_preprocess_region().
 */
function ys_core_preprocess_region(&$variables) {
  $config = \Drupal::config('ys_core.site');
  if ($variables['elements']['#region'] == 'header' && $config->get('search')) {
    $variables['utility_nav__search'] = $config->get('search')['enable_search_form'];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ys_core_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#submit'][] = 'ys_core_user_login_form_submit';
}

/**
 * Custom submit handler for the login form.
 */
function ys_core_user_login_form_submit($form, FormStateInterface $form_state) {
  $url = Url::fromRoute('<front>');
  $form_state->setRedirectUrl($url);
}

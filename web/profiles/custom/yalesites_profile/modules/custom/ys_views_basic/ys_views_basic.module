<?php

/**
 * @file
 * Contains ys_views_basic.module functions.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function ys_views_basic_theme($existing, $type, $theme, $path): array {
  return [
    // The default formatter will only be used for preview on the back-end.
    'views_basic_formatter_default' => [
      'variables' => [
        'view' => [],
      ],
    ],
    'views_basic_formatter_preview' => [
      'variables' => [
        'params' => [],
      ],
    ],
    'views_basic_rows' => [
      'variables' => [
        'card_collection_type' => NULL,
        'rows' => [],
        'parentNode' => NULL,
        'contentType' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_views_data().
 */
function ys_views_basic_views_data_alter(array &$data) {
  $data['node_field_data']['views_basic_sort'] = [
    'title' => t('Views Basic Sort'),
    'sort' => [
      'help' => t('Creates a dynamic sort from Views Basic fields.'),
      'id' => 'views_basic_sort',
    ],
  ];
  $data['node_field_data']['exclude_taxonomy_terms'] = [
    'title' => t('Exclude Taxonomy Terms'),
    'filter' => [
      'help' => t('Excludes taxonomy terms dynamically from the views tool'),
      'id' => 'exclude_taxonomy_terms',
    ],
  ];
  $data['node_field_data']['event_time_period'] = [
    'title' => t('Event Time Period'),
    'filter' => [
      'help' => t('Show future, past, or all events'),
      'id' => 'event_time_period',
    ],
  ];

}

/**
 * Implements hook_views_pre_build().
 */
function ys_views_basic_views_pre_build($view) {
  static $counter = 0;

  if (empty($view->dom_id)) {
    $view->dom_id = "view_" . $counter++;
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for views_exposed_form.
 */
function ys_views_basic_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $form_state->get('view');

  if ($view->id() == 'views_basic_scaffold' && $view->current_display == 'block_1') {
    // Retrieve filter settings from the view or form state.
    $filter_settings = $view->filter_settings ?? NULL;

    // Update form access based on filter settings.
    if (isset($form['title'])) {
      $form['title']['#access'] = (bool) $filter_settings['title'];
    }
  }
}

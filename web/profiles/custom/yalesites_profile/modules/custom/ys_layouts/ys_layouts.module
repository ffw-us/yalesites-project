<?php

/**
 * @file
 * Contains ys_layouts.module functions.
 */

/**
 * Add template files.
 *
 * Implements hook_theme().
 */
function ys_layouts_theme($existing, $type, $theme, $path): array {
  return [
    'ys_event_meta_block' => [
      'variables' => [
        'event_title__heading' => NULL,
        'event_meta__date_start' => NULL,
        'event_meta__date_end' => NULL,
        'event_meta__date_duration' => NULL,
        'event_meta__all_day' => NULL,
        'event_meta__format' => [],
        'event_meta__cta_primary__href' => NULL,
        'event_meta__cta_primary__content' => NULL,
        'calendar_location_text' => NULL,
      ],
    ],
    'ys_page_meta_block' => [
      'variables' => [
        'page_title' => NULL,
        'page_title_display' => 'visible',
      ],
    ],
    'ys_post_meta_block' => [
      'variables' => [
        'label' => NULL,
        'author' => NULL,
        'date_formatted' => NULL,
      ],
    ],
    'ys_profile_meta_block' => [
      'variables' => [
        'profile_meta__heading' => NULL,
        'profile_meta__title_line' => NULL,
        'profile_meta__subtitle_line' => NULL,
        'profile_meta__department' => NULL,
        'media_id' => NULL,
      ],
    ],
    'ys_profile_contact_block' => [
      'variables' => [
        'email' => NULL,
        'phone' => NULL,
        'address' => [],
      ],
    ],
  ];
}

/**
 * Allows global blocks to use the same template as inline blocks.
 *
 * Implements hook_theme_suggestions_block().
 */
function ys_layouts_theme_suggestions_block($variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    return [
      'block__inline_block__' . $variables['elements']['content']['#block_content']->bundle(),
    ];
  }
}

/**
 * Implements hook_form_alter().
 */
function ys_layouts_form_alter(&$form, $form_state, $form_id) {
  // Add message, link to edit global block, destination back to layout builder.
  $reusableDesc = '<p>Note: This is a Global Block.</p><p>Any changes made to a Global Block will be reflected anywhere it is used.</p>';

  // Only target the update block form.
  if ($form_id == 'layout_builder_update_block') {

    // Only target reusable blocks.
    if (!isset($form['settings']['block_form'])) {

      // We need the global block uuid to look up the block id.
      $blockUUID = explode(":", $form_state->getBuildInfo()['callback_object']->getCurrentComponent()->get('configuration')['id']);
      $blocks = \Drupal::entityTypeManager()->getStorage('block_content')->loadByProperties([
        'uuid' => $blockUUID[1],
      ]);

      $blockId = array_key_first($blocks);

      // We need the current path to extract the node id.
      $current_path = \Drupal::service('path.current')->getPath();
      preg_match('/node\.(\d+)/', $current_path, $nodeId);

      // Compiled global block message.
      $form['settings']['global_info'] = [
        '#markup' => "{$reusableDesc} <a class='glb-button glb-button--primary' href='/admin/content/block/{$blockId}?destination=/node/{$nodeId[1]}/layout'>Edit Global Block</a>",
      ];
    }
  }

}

/**
 * Implements hook_preprocess_block().
 */
function ys_layouts_preprocess_block(&$variables) {
  // Sets variable if block is reusable for layout builder preview for styling.
  if ($variables['in_preview'] && isset($variables['content']['#block_content'])) {
    if ($variables['content']['#block_content']->isReusable()) {
      $variables['is_reusable'] = TRUE;
    }
  }
}
